name: Build Websockets

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        idf_ver: ["latest"]
        idf_target: ["esp32"]

    runs-on: ubuntu-20.04
    container: espressif/idf:${{ matrix.idf_ver }}
    steps:
      - name: Checkout esp-protocols
        uses: actions/checkout@v1
      - name: Build ${{ matrix.example }} with IDF-${{ matrix.idf_ver }} for ${{ matrix.idf_target }}
        env:
          IDF_TARGET: ${{ matrix.idf_target }}
        shell: bash
        working-directory: components/esp_websocket_client/examples/
        run: |
          . ${IDF_PATH}/export.sh
          cat sdkconfig.ci >> sdkconfig.defaults
          idf.py build
      - name: Merge binaries
        working-directory: components/esp_websocket_client/examples/build
        env:
          IDF_TARGET: ${{ matrix.idf_target }}
        shell: bash
        run: |
          . ${IDF_PATH}/export.sh
          esptool.py --chip ${{ matrix.idf_target }} merge_bin --fill-flash-size 4MB -o flash_image.bin @flash_args
      - uses: actions/upload-artifact@v2
        with:
          name: examples_app_bin_${{ matrix.idf_target }}_${{ matrix.idf_ver }}
          path: components/esp_websocket_client/examples/build/
          if-no-files-found: error

  run-target:
    name: Run Example Test on target
    needs: build
    strategy:
      fail-fast: false
      matrix:
        idf_ver: ["latest"]
        idf_target: ["esp32"]
    runs-on:
      - self-hosted
      - ESP32-ETHERNET-KIT
    container:
      image: python:3.7-buster
      options: --privileged # Privileged mode has access to serial ports
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v2
        with:
          name: examples_app_bin_${{ matrix.idf_target }}_${{ matrix.idf_ver }}
          path: components/esp_websocket_client/examples/build/
      - name: Install Python packages
        env:
          PIP_EXTRA_INDEX_URL: "https://www.piwheels.org/simple"
        run: | 
          pip install -r $GITHUB_WORKSPACE/components/esp_websocket_client/examples/requirements.txt
      - name: Download Example Test to target
        run: python -m esptool --chip ${{ matrix.idf_target }} write_flash 0x0 components/esp_websocket_client/examples/build/flash_image.bin
      - name: Run Example Test on target
        working-directory: components/esp_websocket_client/examples
        run: |
          cp sdkconfig.ci sdkconfig.defaults
          pytest --log-cli-level DEBUG --junit-xml=./test_app_results_${{ matrix.idf_target }}_${{ matrix.idf_ver }}.xml --target=${{ matrix.idf_target }}
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: examples_results_${{ matrix.idf_target }}_${{ matrix.idf_ver }}
          path: examples/*.xml
