name: Build and Run Test apps

on:
   push:
     paths:
       - 'components/mdns/**'
   pull_request:
     paths:
       - 'components/mdns/**'

jobs:
  build_mdns_app:
    strategy:
      matrix:
        idf_ver: ["latest"]
        idf_target: ["esp32", "esp32s2", "esp32c3"]
    runs-on: ubuntu-20.04
    container: espressif/idf:${{ matrix.idf_ver }}
    steps:
      - name: Checkout esp-protocols
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup Build Environment
        working-directory: components/mdns/tests/test_apps
        run: |
          . ${IDF_PATH}/export.sh
          pip install -r $GITHUB_WORKSPACE/ci/requirements.txt
      - name: Build ${{ matrix.example }} with IDF-${{ matrix.idf_ver }} for ${{ matrix.idf_target }}
        env:
          IDF_TARGET: ${{ matrix.idf_target }}
        shell: bash
        working-directory: components/mdns/tests/test_apps
        run: |
          . ${IDF_PATH}/export.sh
          python $IDF_PATH/tools/ci/ci_build_apps.py . --target ${{ matrix.idf_target }} -vv --pytest-apps
      - name: Merge binaries with IDF-${{ matrix.idf_ver }}
        working-directory: components/mdns/tests/test_apps/build_${{ matrix.idf_target }}_default
        env:
          IDF_TARGET: ${{ matrix.idf_target }}
        shell: bash
        run: |
          . ${IDF_PATH}/export.sh
          esptool.py --chip ${{ matrix.idf_target }} merge_bin --fill-flash-size 4MB -o flash_image.bin @flash_args
      - uses: actions/upload-artifact@v2
        with:
          name: examples_app_bin_${{ matrix.idf_target }}_${{ matrix.idf_ver }}
          path: |
            components/mdns/tests/test_apps/build_${{ matrix.idf_target }}_default/bootloader/bootloader.bin
            components/mdns/tests/test_apps/build_${{ matrix.idf_target }}_default/partition_table/partition-table.bin
            components/mdns/tests/test_apps/build_${{ matrix.idf_target }}_default/*.bin
            components/mdns/tests/test_apps/build_${{ matrix.idf_target }}_default/*.elf
            components/mdns/tests/test_apps/build_${{ matrix.idf_target }}_default/flasher_args.json
            components/mdns/tests/test_apps/build_${{ matrix.idf_target }}_default/config/sdkconfig.h
            components/mdns/tests/test_apps/build_${{ matrix.idf_target }}_default/config/sdkconfig.json
          if-no-files-found: error

  run-target-mdns-app:
    strategy:
      matrix:
        idf_ver: ["latest"]
        idf_target: ["esp32"]
    name: Run mDNS Test apps on target
    needs: build_mdns_app
    runs-on:
      - self-hosted
      - ESP32-ETHERNET-KIT
    # Skip running on forks since it won't have access to secrets
    if: github.repository == 'espressif/esp-protocols'
    steps:
      - name: Clear repository
        run: sudo rm -fr $GITHUB_WORKSPACE && mkdir $GITHUB_WORKSPACE
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v2
        with:
          name: examples_app_bin_${{ matrix.idf_target }}_${{ matrix.idf_ver }}
          path: components/mdns/tests/test_apps/build
      - name: Install Python packages
        env:
          PIP_EXTRA_INDEX_URL: "https://www.piwheels.org/simple"
        run: |
            sudo apt-get install -y dnsutils
      - name: Download Test apps to target
        run: |
            python -m esptool --chip ${{ matrix.idf_target }} write_flash 0x0 components/mdns/tests/test_apps/build/flash_image.bin
      - name: Run Example Test on target
        working-directory: components/mdns/tests/test_apps
        run: |
            python -m pytest --log-cli-level DEBUG --junit-xml=./examples_results_${{ matrix.idf_target }}_${{ matrix.idf_ver }}.xml --target=${{matrix.idf_target}}
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: test_apps_results_${{ matrix.idf_target }}_${{ matrix.idf_ver }}
          path: components/mdns/tests/test_apps/*.xml
