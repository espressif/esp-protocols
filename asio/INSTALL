asio version 0.1.2 - Installation instructions

1.   Supported Platforms
2.   Requirements
3.   Before using asio
4.   Building the tests on Linux
5.   Building the tests on Win32
5.1.   Building with MSVC
5.2.   Building with Borland C++
5.3.   Building with MinGW
5.4.   Building with MinGW and MSYS


1. Supported Platforms
======================

The asio toolkit has been tested with the following compiler/platform
combinations:

  - Redhat Linux 7.3 using gcc 2.95.3
  - Redhat Linux 7.3 using gcc 3.2.1
  - Microsoft Windows 2000 using MSVC 6 sp5
  - Microsoft Windows 2000 using Borland C++ Builder 6 patch 4 (bcc32 5.6.4)
  - Microsoft Windows 2000 using MinGW 3.1.0-1 (gcc 3.2.3)


2. Requirements
===============

The asio toolkit requires either of the boost versions 1.30.0 or 1.30.2. There
is no need to build any of the boost libraries to use asio, as only the header
files are required.


3. Before using asio
====================

The asio toolkit consists only of header files, and so there is no need to
build any libraries before using asio in your own applications. You simply need
to add the following directories to your compiler include path:

  - asio's `include' directory
  - the boost directory (i.e. the one called boost-1.30.2 or boost_1_30_0)


4. Building the tests on Linux
==============================

If the boost directory (i.e. the directory called boost-1.30.2 or boost_1_30_0)
is in the same directory as the asio source kit, then you may configure asio by
simply going:

  ./configure

in the root directory of the asio source kit. Note that configure will always
use 1.30.2 in preference to 1.30.0 if both versions are present.

If the boost directory is in some other location, then you need to specify this
directory when running configure:

  ./configure --with-boost=<BOOSTDIR>

When specifying the boost directory in this way you should ensure that you use
an absolute path.

To build, simply run `make' in the root directory of the asio source kit.


5. Building the tests on Win32
==============================

5.1. Building with MSVC

To build using the MSVC 6 command line compiler, perform the following steps:

  - If you are using a version of boost other than 1.30.2, or if the boost
    directory (i.e. the directory called boost-1.30.2) is not in the same
    directory as the asio source kit, then specify the location of boost by
    running a command similar to `set BOOSTDIR=path_to_boost'. Ensure that
    you specify an absolute path.

  - Change to the asio `src' directory.

  - Execute the command `nmake -f Makefile.msc'.

5.2. Building with Borland C++

To build using the Borland C++ Builder 6 command line compiler, perform the
following steps:

  - If you are using a version of boost other than 1.30.2, or if the boost
    directory (i.e. the directory called boost-1.30.2) is not in the same
    directory as the asio source kit, then specify the location of boost by
    running a command similar to `set BOOSTDIR=path_to_boost'. Ensure that
    you specify an absolute path.

  - Change to the asio `src' directory.

  - Execute the command `make -f Makefile.bor'.

5.3. Building with MinGW

To build using the MinGW g++ compiler from the command line, perform the
following steps:

  - If you are using a version of boost other than 1.30.2, or if the boost
    directory (i.e. the directory called boost-1.30.2) is not in the same
    directory as the asio source kit, then specify the location of boost by
    running a command similar to `set BOOSTDIR=path_to_boost'. Ensure that
    you specify an absolute path.

  - Change to the asio `src' directory.

  - Execute the command `mingw32-make -f Makefile.mgw'.

5.4. Building with MinGW and MSYS

If the boost directory (i.e. the directory called boost-1.30.2 or boost_1_30_0)
is in the same directory as the asio source kit, then you may configure asio by
simply going:

  sh configure

in the root directory of the asio source kit. Note that configure will always
use 1.30.2 in preference to 1.30.0 if both versions are present.

If the boost directory is in some other location, then you need to specify this
directory when running configure:

  sh configure --with-boost=<BOOSTDIR>

When specifying the boost directory in this way you should ensure that you use
an absolute path in a UNIX-style format, e.g. `/c/mydir/boost-1.30.2'.

To build, simply run `make' in the root directory of the asio source kit.
