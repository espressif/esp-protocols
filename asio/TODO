asio to-do items
================

Demuxer functions for event loop integration
--------------------------------------------
Add functions demuxer::work_pending() and demuxer::perform_work() that can be
used to integrate a demuxer event processing loop into an existing event loop.

Add a process control class
---------------------------
Add a class that allows you to do asynchronous operations waiting for process
termination and reconfiguration (i.e. using signals on UNIX, a Ctrl-C handler
or perhaps the service control manager on Windows).

Add standard input/output support
---------------------------------
Add the ability to do asynchronous I/O on standard input and output, e.g. to
wait for a user to type something. This would probably require the addition of
a WFMO reactor on Windows.

Add asynchronous file I/O support
---------------------------------
Add classes for doing file reads and writes asynchronously.

Add an asynchronous object manager
----------------------------------
Add a class to make it easier to manage objects such as sessions and close them
all down gracefully when a process needs to exit. When a session object starts
it would register with the object manager for an asynchronous shutdown
notification. If it receives this notification then it should cancel any other
outstanding asynchronous operations. If the object needs to die early it can
request that it be unregistered in which case it would receive the notification
immediately. Perhaps the interface is similar to an asynchronous "condition
variable"?

Add a rw_locking_dispatcher
---------------------------
Add a new dispatcher implementation, similar to locking_dispatcher except that
it provides functionality like a readers-writers lock.

Error message internationalisation
----------------------------------
Determine what to do with the asio::error messages that are not provided by the
operating system, with respect to internationalisation. This might be done by
checking the locale of the output stream to which the error will be written.
